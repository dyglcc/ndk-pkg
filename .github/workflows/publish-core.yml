name: publish ndk-pkg core

on:
  workflow_dispatch:

jobs:

  base:
    runs-on: ubuntu-latest

    steps:

      - id:  calculate-release-version
        run: |
          RELEASE_VERSION="$(date +%Y.%m.%d)"

          printf 'RELEASE_VERSION=%s\n' "$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    outputs:
      release-version: ${{ steps.calculate-release-version.outputs.RELEASE_VERSION }}


  macos:
    needs: base

    runs-on: macos-14

    strategy:
      fail-fast: false
      matrix:
        target-version: ['10.15', '11.0', '12.0', '13.0', '14.0', '15.0']
        target-arch: [x86_64, arm64]

    steps:
      - uses: actions/checkout@v4

      - run: ./ppkg setup
      - run: ./ppkg update
      - run: ./ppkg install macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4
      - run: ./ppkg bundle  macos-${{ matrix.target-version }}-${{ matrix.target-arch }}/uppm@0.15.4 .tar.xz

      - run: rm check-if-has-dynamic-section.c list-section-names.c print-*-if-present.c wrapper-template.c

      - run: |
          set -ex

          CC="$(xcrun --sdk macosx --find clang)"
          SYSROOT="$(xcrun --sdk macosx --show-sdk-path)"
          CFLAGS="-isysroot $SYSROOT -mmacosx-version-min=${{ matrix.target-version }} -arch ${{ matrix.target-arch }} -Qunused-arguments"

          for f in *.c
          do
            o="${f%.c}.exe"
            $CC $CFLAGS -std=c99 -Os -flto -o "$o" "$f"
            strip "$o"
          done

      - run: ./pack-ndk-pkg-core ${{ needs.base.outputs.release-version }} macos-${{ matrix.target-version }}-${{ matrix.target-arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: ndk-pkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.tar.xz
          path: ndk-pkg-core-${{ needs.base.outputs.release-version }}-macos-${{ matrix.target-version }}-${{ matrix.target-arch }}.tar.xz


  linux:
    needs: base

    strategy:
      fail-fast: false
      matrix:
        target-arch: [x86_64, aarch64]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - run: |
          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          run apk update
          run apk add curl tar xz g++ libc-dev linux-headers

          for item in *.c
          do
            gcc -std=c99 -Os -flto -Wl,-s -static -o "\${item%.c}.exe" "\$item"
          done

          export GITHUB_ACTIONS=true

          run ./ppkg setup --syspm
          run ./ppkg update
          run ./ppkg install uppm@0.15.4 --static
          run ./ppkg bundle  uppm@0.15.4 .tar.xz
          EOF

      - run: ./pack-ndk-pkg-core ${{ needs.base.outputs.release-version }} linux-${{ matrix.target-arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: ndk-pkg-core-${{ needs.base.outputs.release-version }}-linux-${{ matrix.target-arch }}.tar.xz
          path: ndk-pkg-core-${{ needs.base.outputs.release-version }}-linux-${{ matrix.target-arch }}.tar.xz


  android:
    needs: base

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    strategy:
      fail-fast: false
      matrix:
        target-version: [35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21]

    steps:
      - run: apt -y update
      - run: apt -y install curl tar gzip xz-utils

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/master/ndk-pkg
      - run: chmod +x ndk-pkg

      - run: ./ndk-pkg setup
      - run: ./ndk-pkg update

      - run: ./ndk-pkg install android-${{ matrix.target-version }}-arm64-v8a/uppm@0.15.4
      - run: ./ndk-pkg install android-${{ matrix.target-version }}-arm64-v8a/ndk-pkg-core

      - run: ./ndk-pkg bundle  android-${{ matrix.target-version }}-arm64-v8a/uppm@0.15.4
      - run: ./ndk-pkg bundle  android-${{ matrix.target-version }}-arm64-v8a/ndk-pkg-core

      - run: curl -LO https://raw.githubusercontent.com/adobe-fonts/source-code-pro/release/OTF/SourceCodePro-Light.otf

      - name: repack
        run: |
          set -ex

          install -d out

          for item in *.tar.xz
          do
            tar vxf "$item" -C out --strip-components=1
            rm -v   "$item"
          done

          mv out/bin/* *.otf out/

          rm -rf out/share/

          DIRNAME="ndk-pkg-core-${{ needs.base.outputs.release-version }}-android-${{ matrix.target-version }}-arm64-v8a"

          mv out "$DIRNAME"

          tar cJvf "$DIRNAME.tar.xz" "$DIRNAME"

      - uses: actions/upload-artifact@v4
        with:
          name: ndk-pkg-core-android-${{ matrix.target-version }}-arm64-v8a.tar.xz
          path: ndk-pkg-core-*.tar.xz


  publish:

    needs: [base, macos, linux, android]

    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: '*'
          path: .
          merge-multiple: true

      - run: ls -a

      # to avaid: failed to run git: fatal: not a git repository (or any of the parent directories): .git
      - run: git -c init.defaultBranch=master init
      - run: git remote add origin ${{ github.repositoryUrl }}

      - run: |
          cat > notes.md <<EOF
          sha256sum:

          \`\`\`
          $(sha256sum ndk-pkg-core-*.tar.xz)
          \`\`\`
          EOF

      - run: gh release create ndk-pkg-core-${{ needs.base.outputs.release-version }} ndk-pkg-core-*.tar.xz --title ndk-pkg-core-${{ needs.base.outputs.release-version }} --notes-file notes.md
