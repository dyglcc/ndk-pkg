#compdef ndk-pkg

_ndk_pkg_actions=(
    '-h:show help of this command.'
    '--help:show help of this command.'
    '-V:show version of this.'
    '--version:show version of this command.'
    'env:show current machine os and android-ndk toolchain info.'
    'sysinfo:show basic information about your current running operation system.'
    'ndkinfo:show basic information about the given Android NDK.'
    'setup:install essential tools used by this shell script.'
    'integrate:integrate zsh completions and cmake support.'
    'ls-available:list the available packages.'
    'ls-installed:list the installed packages.'
    'ls-outdated:list the installed packages which can be upgraded.'
    'is-available:is the given package available.'
    'is-installed:is the given package installed.'
    'is-outdated:is the given package outdated.'
    'search:search all available packages whose name matches the given regular expression pattern.'
    'info-available:show infomation of the given available package.'
    'info-installed:show infomation of the given installed package.'
    'formula-repo-init:create a new empty formula repository.'
    'formula-repo-add:create a new empty formula repository then sync with server.'
    'formula-repo-del:delete the given formula repository from your local cache.'
    'formula-repo-sync:sync the given formula repository.'
    'formula-repo-conf:change the config of the given formula repository.'
    'formula-repo-info:show infomation of the given formula repository.'
    'formula-repo-list:list all available formula repositories.'
    'install:install packages.'
    'reinstall:reinstall packages.'
    'uninstall:uninstall packages.'
    'cleanup:delete the unused cached files'
    'update:update all available formula repositories.'
    'upgrade:upgrade the outdated packages'
    'upgrade-self:upgrade this software.'
    'fetch:download formula resources of the given package to the cache.'
    'depends:show the depends of the given package.'
    'tree:list files of the given installed package in a tree-like format.'
    'logs:show logs of the given installed package.'
    'pack:pack the given installed package.'
    'export:export the given installed package as the google prefab aar.'
    'deploy:export the given installed package as the google prefab aar then deploy it to Maven Local Repository or Sonatype OSSRH.'
    'gen-url-transform-sample:generate url-transform sample.'
    'android-versions:show android plaform version, android API level, android version code map.'
)

function _ndk_pkg_available_packages() {
    local -a _available_packages
    _available_packages=($(ndk-pkg ls-available 2>/dev/null))
    _describe 'available-packages' _available_packages
}

function _ndk_pkg_installed_packages() {
    local -a _installed_packages
    _installed_packages=($(ndk-pkg ls-installed 2>/dev/null | sed 's|:|\\:|g'))
    _describe 'installed-packages' _installed_packages
}

function _ndk_pkg_installed_package_names() {
    local -a _installed_packages
    _installed_packages=($(ndk-pkg ls-installed 2>/dev/null | cut -d: -f1))
    _describe 'installed-packages' _installed_packages
}

function _ndk_pkg_outdated_packages() {
    local -a _outdated_packages
    _outdated_packages=($(ndk-pkg ls-outdated 2>/dev/null | sed 's|:|\\:|g'))
    _describe 'outdated-packages' _outdated_packages
}

function _ndk_pkg_outdated_package_names() {
    local -a _outdated_packages
    _outdated_packages=($(ndk-pkg ls-outdated 2>/dev/null | cut -d: -f1))
    _describe 'outdated-packages' _outdated_packages
}

function _ndk_pkg() {
    local context state state_descr line
    typeset -A opt_args

    _arguments \
        '1: :{_describe ndk_pkg_actions _ndk_pkg_actions}' \
        '*:: :->option'

    case $state in
        option)
            case $words[1] in
                formula-repo-add)
                    _arguments \
                        '1:formula-repo-name:(name)' \
                        '2:formula-repo-url:(https://)' \
                        '--branch=-[specify the formula repo branch]' \
                        + '(pin)' \
                        '--pin[set pinned to 1]' \
                        '--unpin[set pinned to 0]' \
                        + '(enable)' \
                        '--enable[set enabled to 1]' \
                        '--disable[set enabled to 0]'
                    ;;
                formula-repo-init)
                    _arguments \
                        '1:formula-repo-name:(name)' \
                        '2:formula-repo-url:(https://)' \
                        '--branch=-[specify the formula repo branch]' \
                        + '(pin)' \
                        '--pin[set pinned to 1]' \
                        '--unpin[set pinned to 0]' \
                        + '(enable)' \
                        '--enable[set enabled to 1]' \
                        '--disable[set enabled to 0]'
                    ;;
                formula-repo-conf)
                    _arguments \
                        '1:formula-repo-name:($(ndk-pkg formula-repo-list | sed -n "/^name: /p" | cut -c7-))' \
                        '--url=-[change the formula repo url]' \
                        '--branch=-[change the formula repo branch]' \
                        + '(pin)' \
                        '--pin[set pinned to 1]' \
                        '--unpin[set pinned to 0]' \
                        + '(enable)' \
                        '--enable[set enabled to 1]' \
                        '--disable[set enabled to 0]'
                    ;;
                formula-repo-del)
                    _arguments '1:formula-repo-name:($(ndk-pkg formula-repo-list | sed -n "/^name: /p" | cut -c7-))'
                    ;;
                formula-repo-sync)
                    _arguments '1:formula-repo-name:($(ndk-pkg formula-repo-list | sed -n "/^name: /p" | cut -c7-))'
                    ;;
                formula-repo-info)
                    _arguments '1:formula-repo-name:($(ndk-pkg formula-repo-list | sed -n "/^name: /p" | cut -c7-))'
                    ;;
                info-available)
                    _arguments \
                        '1:package-name:_ndk_pkg_available_packages' \
                        '2:key:(--yaml --json summary version license web-url git-url git-sha git-ref git-nth src-url src-sha src-ft src-fp fix-url fix-sha fix-ft fix-fp res-url res-sha res-ft res-fp dep-pkg dep-upp dep-pym dep-plm ppflags ccflags xxflags ldflags bscript binbstd bsystem dopatch install parallel developer api-min)'
                    ;;
                info-installed)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_packages' \
                        '2:key:(--yaml --json summary version license web-url git-url git-sha git-ref git-nth src-url src-sha src-ft src-fp fix-url fix-sha fix-ft fix-fp res-url res-sha res-ft res-fp dep-pkg dep-upp dep-pym dep-plm ppflags ccflags xxflags ldflags bscript binbstd bsystem dopatch install parallel developer api-min --prefix --files builtat builtat-rfc-3339 builtat-iso-8601 builtat-rfc-3339-utc builtat-iso-8601-utc)'
                    ;;
                fetch)
                    _arguments ':package-name:_ndk_pkg_available_packages'
                    ;;
                depends)
                    _arguments \
                        '1:package-name:_ndk_pkg_available_packages' \
                        '-t[specify output format]:output-type:(dot box svg png)' \
                        '-o[specify output filepath or directory]:output-path:_files'
                    ;;
                pack)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_packages' \
                        '-t[specify output type]:output-type:(zip 7z tar.gz tar.xz tar.lz tar.bz2)' \
                        '-o[specify output filepath or directory]:output-path:_files' \
                        '--keep-session-dir[do not delete the session direcotory even if successfully packed]'
                    ;;
                export)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_package_names' \
                        '-o[specify output filepath or directory]:output-path:_files'
                    ;;
                deploy)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_package_names' \
                        '--keep-session-dir[do not delete the session direcotory even if successfully deployed]' \
                        '--dry-run[do not actually deploy the aar]' \
                        '--debug[debug the process of deployment]' \
                        '--groupId=-[specify groupId]:groupId:(com. org.)' \
                        + '(where_to_deploy)' \
                        '--remote[deploy to Sonatype OSSRH]' \
                        '--local=-[specify the local reposotory path]:local-path:_path_files -/'
                    ;;
                tree)
                    _arguments \
                        '1:package-name:_ndk_pkg_installed_packages' \
                        '-L[level]:level:(3)' \
                        '--dirsfirst[show direcotories first]'
                    ;;
                logs)
                    _arguments '1:package-name:_ndk_pkg_installed_packages'
                    ;;
                install)
                    _arguments \
                        ':package-name:_ndk_pkg_available_packages' \
                        '--ndk-home=-[specify Android NDK HOME direcotory]:ndk-home:_path_files -/' \
                        '--jobs=-[specify the number of jobs you can run in parallel]:jobs:(1 2 3 4 5 6 7 8 9)' \
                        '--dry-run[do not actually install the package]' \
                        '--keep-session-dir[do not delete the session direcotory even if this package is successfully installed]' \
                        '--build-type=-[specify build type]:build-type:(debug release)' \
                        '--link-type=-[link static or shared library]:link-type:(static-only shared-only static-prefered shared-prefered)' \
                        '--export-compile-commands-json[generates compile_commands.json]' \
                        '--disable-ccache[do not use ccache]' \
                        + '(verbose_level)' \
                        '-vv[debug mode. many many messages will be output to terminal]' \
                        '-v[verbose mode. many messages will be output to terminal]' \
                        '-q[silent mode. no any messages will be output to terminal]'
                    ;;
                reinstall)
                    _arguments \
                        ':package-name:_ndk_pkg_installed_packages' \
                        '--ndk-home=-[specify Android NDK HOME direcotory]:ndk-home:_path_files -/' \
                        '--jobs=-[specify the number of jobs you can run in parallel]:jobs:(1 2 3 4 5 6 7 8 9)' \
                        '--dry-run[dry-run]' \
                        '--keep-session-dir[do not delete the session direcotory even if this package is successfully installed]' \
                        '--build-type=-[specify build type]:build-type:(debug release)' \
                        '--link-type=-[link static or shared library]:link-type:(static-only shared-only static-prefered shared-prefered)' \
                        '--export-compile-commands-json[generates compile_commands.json]' \
                        '--disable-ccache[do not use ccache]' \
                        + '(verbose_level)' \
                        '-vv[debug mode. many many messages will be output to terminal]' \
                        '-v[verbose mode. many messages will be output to terminal]' \
                        '-q[silent mode. no any messages will be output to terminal]'
                    ;;
                upgrade)
                    _arguments \
                        ':package-name:_ndk_pkg_outdated_packages' \
                        '--ndk-home=-[specify Android NDK HOME direcotory]:ndk-home:_path_files -/' \
                        '--jobs=-[specify the number of jobs you can run in parallel]:jobs:(1 2 3 4 5 6 7 8 9)' \
                        '--dry-run[dry-run]' \
                        '--keep-session-dir[do not delete the session direcotory even if this package is successfully installed]' \
                        '--build-type=-[specify build type]:build-type:(debug release)' \
                        '--link-type=-[link static or shared library]:link-type:(static-only shared-only static-prefered shared-prefered)' \
                        '--export-compile-commands-json[generates compile_commands.json]' \
                        '--disable-ccache[do not use ccache]' \
                        + '(verbose_level)' \
                        '-vv[debug mode. many many messages will be output to terminal]' \
                        '-v[verbose mode. many messages will be output to terminal]' \
                        '-q[silent mode. no any messages will be output to terminal]'
                    ;;
                uninstall)
                    _arguments '*:package-name:_ndk_pkg_installed_packages'
                    ;;
                is-available)
                    _arguments '1:package-name:_ndk_pkg_available_packages'
                    ;;
                is-installed)
                    _arguments '1:package-name:_ndk_pkg_installed_packages'
                    ;;
                is-outdated)
                    _arguments '1:package-name:_ndk_pkg_outdated_packages'
                    ;;
                ls-installed)
                    _arguments ':package-name:_ndk_pkg_installed_package_names'
                    ;;
                integrate)
                    _arguments '1:what:(zsh cmake)'
                    ;;
                ndkinfo)
                    _arguments '--ndk-home=-[specify Android NDK HOME direcotory]:ndk-home:_path_files -/'
                    ;;
                *)  ;;
            esac
            ;;
        *);;
    esac
}

_ndk_pkg "$@"
